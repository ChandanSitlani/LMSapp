{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/workspace/LMSapp/lmsapp/Screens/Navbar.js\";\n\nimport * as React from 'react';\nimport { BottomNavigation, Text, Button } from 'react-native-paper';\n\nvar MusicRoute = function MusicRoute(props) {\n  return React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 31\n    }\n  }, \"Music\", props.text);\n};\n\nvar AlbumsRoute = function AlbumsRoute(props) {\n  return React.createElement(Button, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 32\n    }\n  }, \"Albumshii\");\n};\n\nvar RecentsRoute = function RecentsRoute() {\n  return React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 28\n    }\n  }, \"Recents\");\n};\n\nvar Navbar = function Navbar() {\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      loggedIn = _React$useState2[0],\n      setLogin = _React$useState2[1];\n\n  var _React$useState3 = React.useState(0),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      index = _React$useState4[0],\n      setIndex = _React$useState4[1];\n\n  var _React$useState5 = React.useState([{\n    key: 'home',\n    title: 'Home',\n    icon: 'home'\n  }, {\n    key: 'issue',\n    title: 'Issue',\n    icon: 'plus'\n  }, {\n    key: 'profile',\n    title: 'Profile',\n    icon: 'user'\n  }]),\n      _React$useState6 = _slicedToArray(_React$useState5, 1),\n      routes = _React$useState6[0];\n\n  if (!loggedIn) {\n    var _React$useState7 = React.useState([{\n      key: 'music',\n      title: 'Music',\n      icon: 'queue-music'\n    }, {\n      key: 'albums',\n      title: 'Albums',\n      icon: 'album'\n    }]);\n\n    var _React$useState8 = _slicedToArray(_React$useState7, 1);\n\n    routes = _React$useState8[0];\n  }\n\n  var rendersc = function rendersc(_ref) {\n    var route = _ref.route,\n        jumpTo = _ref.jumpTo;\n\n    switch (route.key) {\n      case 'home':\n        return React.createElement(MusicRoute, {\n          jump: jumpTo,\n          text: \"hii\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 22\n          }\n        });\n\n      case 'issue':\n        return React.createElement(AlbumsRoute, {\n          jump: jumpTo,\n          set: setIndex,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 24\n          }\n        });\n\n      case 'profile':\n        return React.createElement(RecentsRoute, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 28\n          }\n        });\n    }\n  };\n\n  var renderScene = BottomNavigation.SceneMap({\n    home: MusicRoute,\n    issue: AlbumsRoute,\n    recents: RecentsRoute\n  });\n  return React.createElement(BottomNavigation, {\n    navigationState: {\n      index: index,\n      routes: routes\n    },\n    onIndexChange: setIndex,\n    renderScene: rendersc,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default Navbar;","map":{"version":3,"sources":["/workspace/LMSapp/lmsapp/Screens/Navbar.js"],"names":["React","BottomNavigation","Text","Button","MusicRoute","props","text","AlbumsRoute","RecentsRoute","Navbar","useState","loggedIn","setLogin","index","setIndex","key","title","icon","routes","rendersc","route","jumpTo","renderScene","SceneMap","home","issue","recents"],"mappings":"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","sourcesContent":["\nimport * as React from 'react';\nimport { BottomNavigation, Text, Button } from 'react-native-paper';\n\n\n\nconst MusicRoute = (props) => <Text>Music{props.text}</Text>;\n\nconst AlbumsRoute = (props) => <Button >Albumshii</Button>;\n\nconst RecentsRoute = () => <Text>Recents</Text>;\n\nconst Navbar = () => {\n    const [loggedIn,setLogin]=React.useState(true);\n  const [index, setIndex] = React.useState(0);\n  var [routes] = React.useState([\n      \n    { key: 'home', title: 'Home', icon: 'home' },\n    { key: 'issue', title: 'Issue', icon: 'plus' },\n    { key: 'profile', title: 'Profile', icon: 'user' }\n      \n  ]);\n  if(!loggedIn){\n      [routes] = React.useState([\n    { key: 'music', title: 'Music', icon: 'queue-music' },\n    { key: 'albums', title: 'Albums', icon: 'album' }\n    \n      ]);\n  }\n  \n\n  const rendersc=({route,jumpTo})=>{\n      switch (route.key){\n          case 'home':\n              return <MusicRoute jump={jumpTo} text='hii'/>;\n            case 'issue':\n                return <AlbumsRoute jump={jumpTo} set={setIndex}/>;\n                case 'profile':\n                    return <RecentsRoute />\n      \n      }\n  }\n  const renderScene = BottomNavigation.SceneMap({\n    home: MusicRoute,\n    issue: AlbumsRoute,\n    recents: RecentsRoute,\n  });\n\n  return (\n    <BottomNavigation\n      navigationState={{ index, routes }}\n      onIndexChange={setIndex}\n      renderScene={rendersc}\n    />\n  );\n};\n\nexport default Navbar;"]},"metadata":{},"sourceType":"module"}