{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/workspace/LMSapp/lmsapp/Screens/show_books.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nisSecureContext.js;\nimport * as React from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { BottomNavigation, TextInput, Text, Title, Card, Subheading } from 'react-native-paper';\nimport ShowCard from \"../Screens/show_card\";\nimport axios from 'axios';\n\nvar ShowBooks = function (_React$Component) {\n  _inherits(ShowBooks, _React$Component);\n\n  var _super = _createSuper(ShowBooks);\n\n  function ShowBooks() {\n    var _this;\n\n    _classCallCheck(this, ShowBooks);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      data: [],\n      test: \"ok\",\n      repos: []\n    };\n    return _this;\n  }\n\n  _createClass(ShowBooks, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      this.setState({\n        test: this.props.author\n      });\n      var apiUrl = 'https://api.github.com/users/Yashrsaxena/repos';\n      axios.get(apiUrl).then(function (repos) {\n        var allRepos = repos.data;\n\n        _this2.setState({\n          loading: false,\n          repos: allRepos\n        });\n\n        console.log(_this2.state);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var renderItem = function renderItem(_ref) {\n        var item = _ref.item;\n        return React.createElement(Text, {\n          title: item.name,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 5\n          }\n        });\n      };\n\n      return React.createElement(SafeAreaView, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }\n      }, React.createElement(FlatList, {\n        data: DATA,\n        renderItem: renderItem,\n        keyExtractor: function keyExtractor(item) {\n          return item.id;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 7\n        }\n      }));\n    }\n  }]);\n\n  return ShowBooks;\n}(React.Component);\n\nexport default ShowBooks;","map":{"version":3,"sources":["/workspace/LMSapp/lmsapp/Screens/show_books.js"],"names":["isSecureContext","js","React","BottomNavigation","TextInput","Text","Title","Card","Subheading","ShowCard","axios","ShowBooks","state","data","test","repos","setState","props","author","apiUrl","get","then","allRepos","loading","console","log","renderItem","item","name","styles","container","DATA","id","Component"],"mappings":";;;;;;;;;;;AAAAA,eAAe,CAACC,EAAhB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;;;;;AAEA,SAASC,gBAAT,EAA0BC,SAA1B,EAAqCC,IAArC,EAA2CC,KAA3C,EAAkDC,IAAlD,EAAwDC,UAAxD,QAA0E,oBAA1E;AACA,OAAOC,QAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;IAEMC,S;;;;;;;;;;;;;;;UACFC,K,GAAM;AAACC,MAAAA,IAAI,EAAC,EAAN;AAASC,MAAAA,IAAI,EAAC,IAAd;AAAmBC,MAAAA,KAAK,EAAC;AAAzB,K;;;;;;yCACc;AAAA;;AAChB,WAAKC,QAAL,CAAc;AAACF,QAAAA,IAAI,EAAC,KAAKG,KAAL,CAAWC;AAAjB,OAAd;AACA,UAAMC,MAAM,GAAG,gDAAf;AACJT,MAAAA,KAAK,CAACU,GAAN,CAAUD,MAAV,EAAkBE,IAAlB,CAAuB,UAACN,KAAD,EAAW;AAChC,YAAMO,QAAQ,GAAGP,KAAK,CAACF,IAAvB;;AACA,QAAA,MAAI,CAACG,QAAL,CAAc;AAAEO,UAAAA,OAAO,EAAE,KAAX;AAAkBR,UAAAA,KAAK,EAAEO;AAAzB,SAAd;;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAI,CAACb,KAAjB;AAGL,OANG;AAOC;;;6BAIO;AAAA;;AACJ,UAAMc,UAAU,GAAG,SAAbA,UAAa;AAAA,YAAGC,IAAH,QAAGA,IAAH;AAAA,eACvB,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEA,IAAI,CAACC,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADuB;AAAA,OAAnB;;AAIA,aACI,oBAAC,YAAD;AAAc,QAAA,KAAK,EAAEC,MAAM,CAACC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACN,oBAAC,QAAD;AACE,QAAA,IAAI,EAAEC,IADR;AAEE,QAAA,UAAU,EAAEL,UAFd;AAGE,QAAA,YAAY,EAAE,sBAAAC,IAAI;AAAA,iBAAIA,IAAI,CAACK,EAAT;AAAA,SAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADM,CADJ;AAeH;;;;EApCmB9B,KAAK,CAAC+B,S;;AAuC9B,eAAetB,SAAf","sourcesContent":["isSecureContext.js\nimport * as React from 'react';\nimport { ScrollView, View,SafeAreaView,FlatList,Button } from 'react-native';\nimport { BottomNavigation,TextInput, Text, Title, Card, Subheading } from 'react-native-paper';\nimport ShowCard from '../Screens/show_card';\nimport axios from 'axios'\n\nclass ShowBooks extends React.Component{\n    state={data:[],test:\"ok\",repos:[]}\n    componentWillMount(){\n        this.setState({test:this.props.author})\n        const apiUrl = 'https://api.github.com/users/Yashrsaxena/repos';\n    axios.get(apiUrl).then((repos) => {\n      const allRepos = repos.data;\n      this.setState({ loading: false, repos: allRepos });\n      console.log(this.state);\n    \n  \n});\n    }\n\n    \n    \n    render(){\n        const renderItem = ({ item }) => (\n    <Text title={item.name} />\n  );\n\n        return (\n            <SafeAreaView style={styles.container}>\n      <FlatList\n        data={DATA}\n        renderItem={renderItem}\n        keyExtractor={item => item.id}\n      />\n    </SafeAreaView>\n  );\n\n        \n\n\n        \n        \n    }\n}\n\nexport default ShowBooks;"]},"metadata":{},"sourceType":"module"}