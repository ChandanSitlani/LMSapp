{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/workspace/LMSapp/lmsapp/Screens/Navbar.js\";\n\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { BottomNavigation, Text } from 'react-native-paper';\n\nvar MusicRoute = function MusicRoute(props) {\n  return React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 31\n    }\n  }, \"Music\", props.text);\n};\n\nvar AlbumsRoute = function AlbumsRoute(props) {\n  return React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 32\n    }\n  }, \"Albumshii\", React.createElement(Button, {\n    onPress: function onPress() {\n      return props.jump('profile', {\n        text: 'hiiii'\n      });\n    },\n    title: \"hii\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 47\n    }\n  }));\n};\n\nvar RecentsRoute = function RecentsRoute(_ref) {\n  var _route$params;\n\n  var route = _ref.route;\n  return React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 35\n    }\n  }, \"Recents\", route == null ? void 0 : (_route$params = route.params) == null ? void 0 : _route$params.text, console.log(route));\n};\n\nvar Navbar = function Navbar() {\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      loggedIn = _React$useState2[0],\n      setLogin = _React$useState2[1];\n\n  var _React$useState3 = React.useState(0),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      index = _React$useState4[0],\n      setIndex = _React$useState4[1];\n\n  var _React$useState5 = React.useState([{\n    key: 'home',\n    title: 'Home',\n    icon: 'home'\n  }, {\n    key: 'issue',\n    title: 'Issue',\n    icon: 'plus'\n  }, {\n    key: 'profile',\n    title: 'Profile',\n    icon: 'user'\n  }]),\n      _React$useState6 = _slicedToArray(_React$useState5, 1),\n      routes = _React$useState6[0];\n\n  if (!loggedIn) {\n    var _React$useState7 = React.useState([{\n      key: 'music',\n      title: 'Music',\n      icon: 'queue-music'\n    }, {\n      key: 'albums',\n      title: 'Albums',\n      icon: 'album'\n    }]);\n\n    var _React$useState8 = _slicedToArray(_React$useState7, 1);\n\n    routes = _React$useState8[0];\n  }\n\n  var rendersc = function rendersc(_ref2) {\n    var route = _ref2.route,\n        jumpTo = _ref2.jumpTo;\n\n    switch (route.key) {\n      case 'home':\n        return React.createElement(MusicRoute, {\n          jump: jumpTo,\n          text: \"hii\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 22\n          }\n        });\n\n      case 'issue':\n        return React.createElement(AlbumsRoute, {\n          jump: jumpTo,\n          set: setIndex,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 24\n          }\n        });\n\n      case 'profile':\n        return React.createElement(RecentsRoute, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 28\n          }\n        });\n    }\n  };\n\n  var renderScene = BottomNavigation.SceneMap({\n    home: MusicRoute,\n    issue: AlbumsRoute,\n    recents: RecentsRoute\n  });\n  return React.createElement(BottomNavigation, {\n    navigationState: {\n      index: index,\n      routes: routes\n    },\n    onIndexChange: setIndex,\n    renderScene: rendersc,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default Navbar;","map":{"version":3,"sources":["/workspace/LMSapp/lmsapp/Screens/Navbar.js"],"names":["React","BottomNavigation","Text","MusicRoute","props","text","AlbumsRoute","jump","RecentsRoute","route","params","console","log","Navbar","useState","loggedIn","setLogin","index","setIndex","key","title","icon","routes","rendersc","jumpTo","renderScene","SceneMap","home","issue","recents"],"mappings":"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","sourcesContent":["\nimport * as React from 'react';\nimport { View, Button } from 'react-native';\nimport { BottomNavigation, Text } from 'react-native-paper';\n\n\n\nconst MusicRoute = (props) => <Text>Music{props.text}</Text>;\n\nconst AlbumsRoute = (props) => <Text>Albumshii<Button onPress={()=>props.jump('profile',{text:'hiiii'})} title='hii' /></Text>;\n\nconst RecentsRoute = ({route}) => <Text>Recents{route?.params?.text}{console.log(route)}</Text>;\n\nconst Navbar = () => {\n    const [loggedIn,setLogin]=React.useState(true);\n  const [index, setIndex] = React.useState(0);\n  var [routes] = React.useState([\n      \n    { key: 'home', title: 'Home', icon: 'home' },\n    { key: 'issue', title: 'Issue', icon: 'plus' },\n    { key: 'profile', title: 'Profile', icon: 'user' }\n      \n  ]);\n  if(!loggedIn){\n      [routes] = React.useState([\n    { key: 'music', title: 'Music', icon: 'queue-music' },\n    { key: 'albums', title: 'Albums', icon: 'album' }\n    \n      ]);\n  }\n  \n\n  const rendersc=({route,jumpTo})=>{\n      switch (route.key){\n          case 'home':\n              return <MusicRoute jump={jumpTo} text='hii'/>;\n            case 'issue':\n                return <AlbumsRoute jump={jumpTo} set={setIndex}/>;\n                case 'profile':\n                    return <RecentsRoute />\n      \n      }\n  }\n  const renderScene = BottomNavigation.SceneMap({\n    home: MusicRoute,\n    issue: AlbumsRoute,\n    recents: RecentsRoute,\n  });\n\n  return (\n    <BottomNavigation\n      navigationState={{ index, routes }}\n      onIndexChange={setIndex}\n      renderScene={rendersc}\n    />\n  );\n};\n\nexport default Navbar;"]},"metadata":{},"sourceType":"module"}