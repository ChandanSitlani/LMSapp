{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/workspace/LMSapp/lmsapp/Screens/Login.js\";\n\nisSecureContext.js;\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport { BottomNavigation, TextInput, Text, Subheading } from 'react-native-paper';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport axios from 'axios';\nimport GLOBAL from \"../global\";\n\nvar createTwoButtonAlert = function createTwoButtonAlert() {\n  return Alert.alert(\"Alert Title\", \"My Alert Msg\", [{\n    text: \"Cancel\",\n    onPress: function onPress() {\n      return console.log(\"Cancel Pressed\");\n    },\n    style: \"cancel\"\n  }, {\n    text: \"OK\",\n    onPress: function onPress() {\n      return console.log(\"OK Pressed\");\n    }\n  }], {\n    cancelable: false\n  });\n};\n\nvar Login = function Login(props) {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      submitted = _React$useState2[0],\n      setSubmitted = _React$useState2[1];\n\n  var _React$useState3 = React.useState(''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      username = _React$useState4[0],\n      setUsername = _React$useState4[1];\n\n  var _React$useState5 = React.useState(''),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      password = _React$useState6[0],\n      setPassword = _React$useState6[1];\n\n  var _React$useState7 = React.useState(''),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      res = _React$useState8[0],\n      setRes = _React$useState8[1];\n\n  var showText = \"Please Enter Book Name\";\n\n  var logIn = function logIn() {\n    var apiUrl = 'https://lmsappapi.herokuapp.com/login/';\n    console.log(apiUrl);\n    axios.post(apiUrl, {\n      username: username,\n      password: password\n    }, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (data) {\n      var token = data.data.token;\n      console.log(\"data\", data);\n\n      if (token) {\n        props.login(true);\n        global.token = token;\n      } else setRes(\"invalid username/pass\");\n\n      return token;\n    }).catch(function () {\n      setRes('invalid username or password');\n    });\n  };\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, React.createElement(Subheading, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, \"Search!\"), React.createElement(TextInput, {\n    label: \"Username\",\n    mode: \"outlined\",\n    value: username,\n    onChangeText: function onChangeText(text) {\n      setUsername(text);\n      setSubmitted(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    label: \"Password\",\n    mode: \"outlined\",\n    value: password,\n    onChangeText: function onChangeText(text) {\n      setPassword(text);\n      setSubmitted(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }), React.createElement(Button, {\n    title: \"Log out\",\n    onPress: function onPress() {\n      setSubmitted(true);\n      logIn();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }), res, submitted ? \"yes\" : \"no\");\n};\n\nexport default Login;","map":{"version":3,"sources":["/workspace/LMSapp/lmsapp/Screens/Login.js"],"names":["isSecureContext","js","React","AsyncStorage","BottomNavigation","TextInput","Text","Subheading","createStackNavigator","axios","GLOBAL","createTwoButtonAlert","Alert","alert","text","onPress","console","log","style","cancelable","Login","props","useState","submitted","setSubmitted","username","setUsername","password","setPassword","res","setRes","showText","logIn","apiUrl","post","headers","then","data","token","login","global","catch","flex","justifyContent","alignItems"],"mappings":"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","sourcesContent":["isSecureContext.js\nimport * as React from 'react';\nimport { View,Button,Alert,AsyncStorage } from 'react-native';\nimport { BottomNavigation,TextInput, Text,Subheading } from 'react-native-paper';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport axios from 'axios'\nimport GLOBAL from '../global'\n\n\nconst createTwoButtonAlert = () =>\n    Alert.alert(\n      \"Alert Title\",\n      \"My Alert Msg\",\n      [\n        {\n          text: \"Cancel\",\n          onPress: () => console.log(\"Cancel Pressed\"),\n          style: \"cancel\"\n        },\n        { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\n      ],\n      { cancelable: false }\n    );\n\n\nconst Login=(props)=> {\n    const [submitted,setSubmitted]=React.useState(false);\n    \n    const [username,setUsername]=React.useState('');\n    const [password,setPassword]=React.useState('');\n    const [res,setRes]=React.useState('');\n    const showText=\"Please Enter Book Name\"\n\n    const logIn=()=>{\n        const apiUrl = 'https://lmsappapi.herokuapp.com/login/';\n    console.log(apiUrl)\n    \n    axios.post(apiUrl,{username:username,password:password},{headers: {\n            'Content-Type': 'application/json',\n        }}).then((data) => {\n      const token = data.data.token;\n      console.log(\"data\",data);\n      \n            if(token)\n            {props.login(true);global.token=token;}\n            else\n            setRes(\"invalid username/pass\")\n      return token;\n      \n      \n    \n    \n        \n        }).catch(()=>{setRes('invalid username or password')});\n        \n\n    }\n  return (\n      \n      \n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n      <Subheading>Search!</Subheading>\n\n      <TextInput\n      label=\"Username\"\n      mode=\"outlined\"\n      value={username}\n      onChangeText={text => {setUsername(text);setSubmitted(false)}}\n    />\n\n    <TextInput\n      label=\"Password\"\n      mode=\"outlined\"\n      value={password}\n      onChangeText={text => {setPassword(text);setSubmitted(false)}}\n    />\n      \n      <Button\n        title=\"Log out\"\n        onPress={() => {setSubmitted(true);logIn();}}\n      />\n\n      {res}{submitted?\"yes\":\"no\"}\n    </View>\n  );\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}